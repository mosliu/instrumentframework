/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */
package net.labthink.cvs;

import java.awt.Dimension;
import java.awt.Toolkit;
import java.io.File;
import java.io.IOException;
import java.util.LinkedList;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JFileChooser;
import javax.swing.JOptionPane;
import javax.swing.UIManager;
import javax.swing.UnsupportedLookAndFeelException;
import net.labthink.utils.FilePlus;
import net.labthink.utils.GUIPrintStream;

/**
 *
 * @author Moses
 */
public class removeWriteRight extends javax.swing.JFrame {

    /**
     * Creates new form removeWriteRight
     */
    public removeWriteRight() {
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jButton1 = new javax.swing.JButton();
        jPanel_output = new javax.swing.JPanel();
        jScrollPane_output = new javax.swing.JScrollPane();
        jTextArea_output = new javax.swing.JTextArea();
        jButton2 = new javax.swing.JButton();
        jLabel1 = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("给李明写的偷懒工具");

        jButton1.setText("选择目录");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        jPanel_output.setBorder(javax.swing.BorderFactory.createTitledBorder("信息输出区"));

        jTextArea_output.setColumns(20);
        jTextArea_output.setRows(5);
        jScrollPane_output.setViewportView(jTextArea_output);

        javax.swing.GroupLayout jPanel_outputLayout = new javax.swing.GroupLayout(jPanel_output);
        jPanel_output.setLayout(jPanel_outputLayout);
        jPanel_outputLayout.setHorizontalGroup(
            jPanel_outputLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jScrollPane_output, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, 515, Short.MAX_VALUE)
        );
        jPanel_outputLayout.setVerticalGroup(
            jPanel_outputLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jScrollPane_output, javax.swing.GroupLayout.DEFAULT_SIZE, 240, Short.MAX_VALUE)
        );

        jButton2.setText("开始吧，移除所有人的写权限吧，我下定决心了");
        jButton2.setEnabled(false);
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });

        jLabel1.setText(" ");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jPanel_output, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jButton2)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(jButton1)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 432, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addGap(0, 0, Short.MAX_VALUE)))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jButton1)
                    .addComponent(jLabel1))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jButton2)
                .addGap(71, 71, 71)
                .addComponent(jPanel_output, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        //打开目录

        JFileChooser jfc = new JFileChooser();
        jfc.setDialogTitle("打开CVS仓库目录");
        jfc.setMultiSelectionEnabled(false);
        jfc.setFileSelectionMode(JFileChooser.DIRECTORIES_ONLY);
        int result = jfc.showOpenDialog(this);  // 打开"打开文件"对话框
        if (result == JFileChooser.APPROVE_OPTION) {
            path = jfc.getSelectedFile().getAbsolutePath();
            jLabel1.setText(path);
        }

        File f_rootdir = new File(path);
        if (f_rootdir.isDirectory()) {
            jButton2.setEnabled(true);
        } else {
            System.out.println("所选不是目录");
        }




    }//GEN-LAST:event_jButton1ActionPerformed

    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed

        int rc = JOptionPane.showConfirmDialog(null,
                "再给你一遍反悔的机会，你确认要开始处理么",
                "慎重考虑吧～",
                JOptionPane.YES_NO_OPTION);

        if (rc == JOptionPane.YES_OPTION) {
            //yes
            rc = JOptionPane.showConfirmDialog(null,
                    "又一遍反悔的机会，你确认要开始处理么",
                    "慎重考虑吧～",
                    JOptionPane.YES_NO_OPTION);
            if (rc == JOptionPane.YES_OPTION) {
            } else {
                System.out.println("有点信心好不好");
                return;
            }


        } else if (rc == JOptionPane.NO_OPTION) {
            System.out.println("有点信心好不好");
            return;
        }

        //遍历



        File f_rootdir = new File(path);
        File file[] = f_rootdir.listFiles();
        LinkedList<File> list = new LinkedList<File>();
        for (int i = 0; i < file.length; i++) {
            if (file[i].isDirectory()) {
                list.add(file[i]);
            } else {
                //不处理文件
            }
        }
        File tmp;
        while (!list.isEmpty()) {
            tmp = list.removeFirst();
            if (tmp.isDirectory()) {
                file = tmp.listFiles();
                if (file == null) {
                    continue;
                }
                for (int i = 0; i < file.length; i++) {
                    if (file[i].isDirectory()) {
                        list.add(file[i]);
                    } else if (file[i].getName().equalsIgnoreCase("fileattr.xml")) {
//                        System.out.println(file[i].getAbsolutePath());
                        doparse(file[i]);
                    } else {
                    }
                }
            } else {
//                System.out.println(tmp.getAbsolutePath());
            }
        }

        //备份

        //修改

        //执行完成，禁用按钮
        jButton2.setEnabled(false);
    }//GEN-LAST:event_jButton2ActionPerformed
    GUIPrintStream gpstream;
    String path = "";

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        try {
            UIManager.setLookAndFeel("com.sun.java.swing.plaf.windows.WindowsLookAndFeel");
        } catch (ClassNotFoundException ex) {
            Logger.getLogger(removeWriteRight.class.getName()).log(Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            Logger.getLogger(removeWriteRight.class.getName()).log(Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            Logger.getLogger(removeWriteRight.class.getName()).log(Level.SEVERE, null, ex);
        } catch (UnsupportedLookAndFeelException ex) {
            Logger.getLogger(removeWriteRight.class.getName()).log(Level.SEVERE, null, ex);
        }
        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {

                removeWriteRight ut = new removeWriteRight();

//                Toolkit kit = ut.getToolkit();
//                Dimension winSize = kit.getScreenSize();
//                ut.setBounds(winSize.width / 4, winSize.height / 4, //位置
//                        winSize.width / 2, winSize.height / 2); //大小
                ut.setLocationRelativeTo(null);
                ut.setVisible(true);
                ut.gpstream = new GUIPrintStream(System.out, ut.jTextArea_output, true);
                System.setOut(ut.gpstream);
//                new InfraredSimulator().setVisible(true);
            }
        });


    }
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton2;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JPanel jPanel_output;
    private javax.swing.JScrollPane jScrollPane_output;
    private javax.swing.JTextArea jTextArea_output;
    // End of variables declaration//GEN-END:variables

    private void doparse(File file) {
        File dest = new File(file.getAbsolutePath() + ".backup");
        //备份
        try {
            FilePlus.CopyFile(file, dest);
        } catch (IOException ex) {
            Logger.getLogger(removeWriteRight.class.getName()).log(Level.SEVERE, null, ex);
        }
        if (file.getAbsolutePath().contains("软件")) {
            return;
        }
        if (file.getAbsolutePath().contains("Public")) {
            return;
        }
        if (file.getAbsolutePath().contains("SoftwareGroup")) {
            return;
        }

        String a = FilePlus.ReadTextFileToString(file.getAbsolutePath());
        a = a.replaceAll("<write/>", "");
        FilePlus.writeText(file.getAbsolutePath(), a);
        System.out.println("更新文件:" + file.getAbsolutePath());
    }
}
