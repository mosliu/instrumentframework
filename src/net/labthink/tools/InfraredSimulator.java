/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */
package net.labthink.tools;

import java.text.ParseException;
import java.text.SimpleDateFormat;
import java.util.Timer;
import java.util.TimerTask;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.UIManager;
import javax.swing.UnsupportedLookAndFeelException;
import net.labthink.instrument.device.InfraredSensorSimulator.codec.InfraredProtocolCodecFactory;
import net.labthink.instrument.device.InfraredSensorSimulator.handler.InfraredHandler;
import net.labthink.instrument.device.InfraredSensorSimulator.message.InfraredMessage;
import net.labthink.instrument.device.UILogger;
import net.labthink.instrument.device.UITester;
import net.labthink.instrument.rs232.RS232Connector;
import net.labthink.utils.BytePlus;
import net.labthink.utils.GUIPrintStream;
import org.apache.mina.core.RuntimeIoException;
import org.apache.mina.core.future.WriteFuture;
import org.apache.mina.core.service.IoHandlerAdapter;
import org.apache.mina.core.session.IoSession;
import org.apache.mina.filter.codec.ProtocolCodecFilter;
import org.apache.mina.filter.logging.LoggingFilter;
import org.apache.mina.transport.serial.SerialAddress;

/**
 *
 * @author Moses
 */
public class InfraredSimulator extends javax.swing.JFrame {

    /**
     * 定义公用串口变量
     */
    SerialAddress portAddress;
    IoHandlerAdapter handler = null;
    RS232Connector receiver = null;
    TimerTask tt = null;
    Timer timer = null;
    GUIPrintStream gpstream;
    public static short ppm = 500;//ppm
    public static short ppm2 = 500; //所谓的监视用数据
    public static int sendspeed = 500;
    
    /**
     * Creates new form InfraredSimulator
     */
    public InfraredSimulator() {
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel_comportset = new javax.swing.JPanel();
        jLabel_ComPort = new javax.swing.JLabel();
        jComboBox_ComPort = new javax.swing.JComboBox();
        jLabel_BaudRate = new javax.swing.JLabel();
        jComboBox_BaudRate = new javax.swing.JComboBox();
        jToggleButton_startStopAction = new javax.swing.JToggleButton();
        jPanel_params = new javax.swing.JPanel();
        jFormattedTextField_ppm = new javax.swing.JFormattedTextField();
        jLabel_ppm = new javax.swing.JLabel();
        jLabel_speed = new javax.swing.JLabel();
        jFormattedTextField_speed = new javax.swing.JFormattedTextField();
        jFormattedTextField_ppm2 = new javax.swing.JFormattedTextField();
        jLabel_ppm2 = new javax.swing.JLabel();
        jLabel1 = new javax.swing.JLabel();
        jPanel_output = new javax.swing.JPanel();
        jScrollPane_output = new javax.swing.JScrollPane();
        jTextArea_output = new javax.swing.JTextArea();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jPanel_comportset.setBorder(javax.swing.BorderFactory.createTitledBorder("串口设置"));

        jLabel_ComPort.setText("端口设置");

        jComboBox_ComPort.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "COM1", "COM2", "COM3", "COM4", "COM5", "COM6", "COM7", "COM8", "COM9", "COM10", "COM11", "COM12", "COM13", "COM14", "COM15", "COM16", "COM17", "COM18", "COM19", "COM20", "COM21", "COM22", "COM23", "COM24", "COM25", "COM26", "COM27", "COM28", "COM29", "COM30", "COM31", "COM32" }));
        jComboBox_ComPort.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jComboBox_ComPortActionPerformed(evt);
            }
        });

        jLabel_BaudRate.setText("速率");

        jComboBox_BaudRate.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "110", "300", "600", "1200", "2400", "4800", "9600", "14400", "19200", "38400", "43000", "56000", "57600", "115200" }));
        jComboBox_BaudRate.setSelectedIndex(6);

        javax.swing.GroupLayout jPanel_comportsetLayout = new javax.swing.GroupLayout(jPanel_comportset);
        jPanel_comportset.setLayout(jPanel_comportsetLayout);
        jPanel_comportsetLayout.setHorizontalGroup(
            jPanel_comportsetLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel_comportsetLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel_comportsetLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jLabel_ComPort)
                    .addComponent(jLabel_BaudRate))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel_comportsetLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jComboBox_BaudRate, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jComboBox_ComPort, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap(38, Short.MAX_VALUE))
        );
        jPanel_comportsetLayout.setVerticalGroup(
            jPanel_comportsetLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel_comportsetLayout.createSequentialGroup()
                .addGroup(jPanel_comportsetLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel_ComPort)
                    .addComponent(jComboBox_ComPort, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel_comportsetLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel_BaudRate)
                    .addComponent(jComboBox_BaudRate, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(12, Short.MAX_VALUE))
        );

        jToggleButton_startStopAction.setText("开始");
        jToggleButton_startStopAction.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jToggleButton_startStopActionActionPerformed(evt);
            }
        });

        jPanel_params.setBorder(javax.swing.BorderFactory.createTitledBorder("参数"));

        jFormattedTextField_ppm.setFormatterFactory(new javax.swing.text.DefaultFormatterFactory(new javax.swing.text.NumberFormatter(new java.text.DecimalFormat("#0"))));
        jFormattedTextField_ppm.setText("500");
        jFormattedTextField_ppm.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                jFormattedTextField_ppmKeyReleased(evt);
            }
        });

        jLabel_ppm.setText("ppm值");

        jLabel_speed.setText("速度(ms)");

        jFormattedTextField_speed.setFormatterFactory(new javax.swing.text.DefaultFormatterFactory(new javax.swing.text.NumberFormatter(new java.text.DecimalFormat("#0"))));
        jFormattedTextField_speed.setText("500");
        jFormattedTextField_speed.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                jFormattedTextField_speedKeyReleased(evt);
            }
        });

        jFormattedTextField_ppm2.setFormatterFactory(new javax.swing.text.DefaultFormatterFactory(new javax.swing.text.NumberFormatter(new java.text.DecimalFormat("#0"))));
        jFormattedTextField_ppm2.setText("500");
        jFormattedTextField_ppm2.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                jFormattedTextField_ppm2KeyReleased(evt);
            }
        });

        jLabel_ppm2.setText("监视数据");

        javax.swing.GroupLayout jPanel_paramsLayout = new javax.swing.GroupLayout(jPanel_params);
        jPanel_params.setLayout(jPanel_paramsLayout);
        jPanel_paramsLayout.setHorizontalGroup(
            jPanel_paramsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel_paramsLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel_paramsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addGroup(jPanel_paramsLayout.createSequentialGroup()
                        .addComponent(jLabel_speed)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(jFormattedTextField_speed))
                    .addGroup(jPanel_paramsLayout.createSequentialGroup()
                        .addGroup(jPanel_paramsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(jLabel_ppm)
                            .addComponent(jLabel_ppm2))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(jPanel_paramsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jFormattedTextField_ppm, javax.swing.GroupLayout.PREFERRED_SIZE, 90, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jFormattedTextField_ppm2, javax.swing.GroupLayout.PREFERRED_SIZE, 90, javax.swing.GroupLayout.PREFERRED_SIZE))))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel_paramsLayout.setVerticalGroup(
            jPanel_paramsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel_paramsLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel_paramsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jFormattedTextField_ppm, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel_ppm))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel_paramsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jFormattedTextField_ppm2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel_ppm2))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(jPanel_paramsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel_speed)
                    .addComponent(jFormattedTextField_speed, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(21, 21, 21))
        );

        jLabel1.setFont(new java.awt.Font("宋体", 0, 24)); // NOI18N
        jLabel1.setForeground(new java.awt.Color(255, 102, 51));
        jLabel1.setText("红外ppm模拟");

        jPanel_output.setBorder(javax.swing.BorderFactory.createTitledBorder("信息输出区"));

        jTextArea_output.setColumns(20);
        jTextArea_output.setRows(5);
        jScrollPane_output.setViewportView(jTextArea_output);

        javax.swing.GroupLayout jPanel_outputLayout = new javax.swing.GroupLayout(jPanel_output);
        jPanel_output.setLayout(jPanel_outputLayout);
        jPanel_outputLayout.setHorizontalGroup(
            jPanel_outputLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jScrollPane_output, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, 375, Short.MAX_VALUE)
        );
        jPanel_outputLayout.setVerticalGroup(
            jPanel_outputLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jScrollPane_output, javax.swing.GroupLayout.DEFAULT_SIZE, 312, Short.MAX_VALUE)
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 206, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(263, 384, Short.MAX_VALUE))
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(jPanel_comportset, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                .addComponent(jToggleButton_startStopAction, javax.swing.GroupLayout.PREFERRED_SIZE, 71, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addComponent(jPanel_params, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addGap(0, 0, Short.MAX_VALUE))))
            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                    .addGap(203, 203, 203)
                    .addComponent(jPanel_output, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addContainerGap()))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel1)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jPanel_comportset, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jPanel_params, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(54, 54, 54)
                .addComponent(jToggleButton_startStopAction)
                .addContainerGap())
            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                    .addContainerGap()
                    .addComponent(jPanel_output, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addContainerGap()))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jComboBox_ComPortActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jComboBox_ComPortActionPerformed
    }//GEN-LAST:event_jComboBox_ComPortActionPerformed

    private void jToggleButton_startStopActionActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jToggleButton_startStopActionActionPerformed
       if (timer == null) {
            timer = new Timer();
        }
//        portAddress = new SerialAddress((String) jComboBox_ComPort.getSelectedItem(), 9600, DataBits.DATABITS_8, StopBits.BITS_1, Parity.NONE,
//                FlowControl.NONE);
        portAddress = getserialport();

        if (handler == null) {
            handler = new InfraredHandler();
        }
        SimpleDateFormat sdf = new SimpleDateFormat("yyyy-MM-dd");

        //((FPTF1Handler) handler).loadData();

        if (receiver != null) {
            receiver.endListen();
        }
        receiver = RS232Connector.getInstance(handler, portAddress);

        receiver.addFilter("logger", new LoggingFilter());
        receiver.addFilter("codec", new ProtocolCodecFilter(new InfraredProtocolCodecFactory()));    // 设置编码过滤器

        // receiver.addFilter("codec", new ProtocolCodecFilter(
        // new TextLineCodecFactory(Charset.forName("UTF-8")))); // 设置编码过滤器
        if (jToggleButton_startStopAction.isSelected()) {
            try {
                receiver.startListen();
            } catch (RuntimeIoException e) {
                System.out.println("串口打开失败");
            }
            System.out.println("当前版本0.0.2");
            System.out.println("已完善接收ppm解析功能,待解决同时开两个窗口时的问题");
            final IoSession session = receiver.getReceiverSession();

            tt = new TimerTask() {
                public void run() {
                    try {
                        InfraredMessage pkt = new InfraredMessage();
                        byte[] content = pkt.getContent();
                        byte[] tmp = BytePlus.short2bytes(ppm);
                        content[0] = tmp[0];
                        content[1] = tmp[1];
                        byte[] tmp2 = BytePlus.short2bytes(ppm2);
                        content[2] = tmp2[0];
                        content[3] = tmp2[1];
                        pkt.setContent(content);

                        WriteFuture wf = session.write(pkt);// 发送消息
                        wf.awaitUninterruptibly();
//                        Thread.sleep(sendspeed);

                    } catch (Exception ex) {
                        Logger.getLogger(UILogger.class.getName()).log(Level.SEVERE, null, ex);
                    }
                }
            };
            timer.scheduleAtFixedRate(tt, 50, sendspeed);
            
            jToggleButton_startStopAction.setText("关闭");
        } else {
            receiver.endListen();

            if (tt != null) {
                tt.cancel();
            }
//            timer.cancel();
            timer.purge();
            jToggleButton_startStopAction.setText("开始");
        }
    }//GEN-LAST:event_jToggleButton_startStopActionActionPerformed

    private void jFormattedTextField_speedKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jFormattedTextField_speedKeyReleased
        setparams();
    }//GEN-LAST:event_jFormattedTextField_speedKeyReleased

    private void jFormattedTextField_ppmKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jFormattedTextField_ppmKeyReleased
        setparams();
    }//GEN-LAST:event_jFormattedTextField_ppmKeyReleased

    private void jFormattedTextField_ppm2KeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jFormattedTextField_ppm2KeyReleased
        // TODO add your handling code here:
    }//GEN-LAST:event_jFormattedTextField_ppm2KeyReleased

    private void setparams(){
       if(!jFormattedTextField_ppm.isEditValid()){
           return;
       }
       if(!jFormattedTextField_ppm2.isEditValid()){
           return;
       }
       if(!jFormattedTextField_speed.isEditValid()){
           return;
       }
        String sppm = jFormattedTextField_ppm.getText();
//        System.out.println(sppm);
        if (sppm.length()>4) {
            sppm="500";
        }else{
            ppm = Short.parseShort(sppm);
        }
        String sppm2 = jFormattedTextField_ppm2.getText();
//        System.out.println(sppm);
        if (sppm2.length()>4) {
            sppm2="500";
        }else{
            ppm2 = Short.parseShort(sppm2);
        }
        String sspeed = jFormattedTextField_speed.getText();
        if (sspeed.length()>9) {
            sspeed="500";
        }else{
            sendspeed = Short.parseShort(sspeed);
        }
        
    }
    
    /**
     * 换取选定的串口
     * @return 
     */
    private SerialAddress getserialport() {
        int ibaudrate = Integer.parseInt((String) jComboBox_BaudRate.getSelectedItem());
        String port = (String) jComboBox_ComPort.getSelectedItem();
        portAddress = new SerialAddress(port, ibaudrate, SerialAddress.DataBits.DATABITS_8, SerialAddress.StopBits.BITS_1, SerialAddress.Parity.NONE,
                SerialAddress.FlowControl.NONE);
        return portAddress;
    }
    
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(InfraredSimulator.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(InfraredSimulator.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(InfraredSimulator.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(InfraredSimulator.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
         try {
            UIManager.setLookAndFeel("com.sun.java.swing.plaf.windows.WindowsLookAndFeel");
        } catch (ClassNotFoundException ex) {
            Logger.getLogger(UITester.class.getName()).log(Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            Logger.getLogger(UITester.class.getName()).log(Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            Logger.getLogger(UITester.class.getName()).log(Level.SEVERE, null, ex);
        } catch (UnsupportedLookAndFeelException ex) {
            Logger.getLogger(UITester.class.getName()).log(Level.SEVERE, null, ex);
        }
        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                InfraredSimulator ut = new InfraredSimulator();
                ut.setVisible(true);
                ut.initOutput();
                ut.gpstream = new GUIPrintStream(System.out, ut.jTextArea_output, true);
                System.setOut(ut.gpstream);
                
//                new InfraredSimulator().setVisible(true);
            }
        });
    }
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JComboBox jComboBox_BaudRate;
    private javax.swing.JComboBox jComboBox_ComPort;
    private javax.swing.JFormattedTextField jFormattedTextField_ppm;
    private javax.swing.JFormattedTextField jFormattedTextField_ppm2;
    private javax.swing.JFormattedTextField jFormattedTextField_speed;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel_BaudRate;
    private javax.swing.JLabel jLabel_ComPort;
    private javax.swing.JLabel jLabel_ppm;
    private javax.swing.JLabel jLabel_ppm2;
    private javax.swing.JLabel jLabel_speed;
    private javax.swing.JPanel jPanel_comportset;
    private javax.swing.JPanel jPanel_output;
    private javax.swing.JPanel jPanel_params;
    private javax.swing.JScrollPane jScrollPane_output;
    private javax.swing.JTextArea jTextArea_output;
    private javax.swing.JToggleButton jToggleButton_startStopAction;
    // End of variables declaration//GEN-END:variables

    void initOutput() {
        gpstream = new GUIPrintStream(System.out, jTextArea_output, true);
    }
}
